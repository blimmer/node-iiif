{"version":3,"sources":["../src/error.ts","../src/processor.ts","../src/transform.ts","../src/v2/index.ts","../src/calculator/base.ts","../src/calculator/v2.ts","../src/v2/info.ts","../src/v3/index.ts","../src/calculator/v3.ts","../src/v3/info.ts","../src/versions.ts"],"sourcesContent":["export class IIIFError extends Error {\n  statusCode?: number;\n\n  constructor (message: string, opts: { statusCode?: number } = {}) {\n    super(message);\n    this.statusCode = opts.statusCode;\n  }\n}\n\nexport default IIIFError;\n","import Debug from 'debug';\nimport mime from 'mime-types';\nimport path from 'path';\nimport sharp from 'sharp';\nimport { Operations } from './transform';\nimport { IIIFError } from './error';\nimport Versions from './versions';\nimport type { Dimensions, MaxDimensions } from './types';\nimport type { VersionModule } from './contracts';\n\nconst debug = Debug('iiif-processor:main');\nconst debugv = Debug('verbose:iiif-processor');\n\nconst defaultpathPrefix = '/iiif/{{version}}/';\n\nfunction getIiifVersion (url: string, template: string) {\n  const { origin, pathname } = new URL(url);\n  const templateMatcher = template.replace(/\\{\\{version\\}\\}/, '(?<iiifVersion>2|3)');\n  const pathMatcher = `^(?<prefix>${templateMatcher})(?<request>.+)$`;\n  const re = new RegExp(pathMatcher);\n  const parsed = re.exec(pathname) as any;\n  if (parsed) {\n    parsed.groups.prefix = origin + parsed.groups.prefix;\n    return { ...parsed.groups } as { prefix: string; iiifVersion: string; request: string };\n  } else {\n    throw new IIIFError('Invalid IIIF path');\n  }\n}\n\ntype StreamResolver = (input: { id: string; baseUrl: string }) => Promise<NodeJS.ReadableStream>;\ntype StreamResolverWithCallback = (\n  input: { id: string; baseUrl: string },\n  callback: (stream: NodeJS.ReadableStream) => Promise<unknown>\n) => Promise<unknown>;\n\nexport class Processor {\n  private errorClass = IIIFError;\n  private Implementation!: VersionModule;\n  private sizeInfo?: Dimensions[];\n  private sharpOptions?: Record<string, unknown>;\n\n  id!: string;\n  baseUrl!: string;\n  version!: 2 | 3;\n  request!: string;\n  streamResolver!: StreamResolver | StreamResolverWithCallback;\n  filename?: string;\n\n  // parsed params from Calculator.parsePath\n  info?: string;\n  region!: string;\n  size!: string;\n  rotation!: string;\n  quality!: string;\n  format!: string;\n\n  // options\n  dimensionFunction!: (input: { id: string; baseUrl: string }) => Promise<Dimensions | Dimensions[]>;\n  max?: MaxDimensions;\n  includeMetadata = false;\n  density?: number | null;\n  debugBorder = false;\n  pageThreshold?: number;\n\n  constructor (url: string, streamResolver: StreamResolver | StreamResolverWithCallback, opts: any = {}) {\n    const { prefix, iiifVersion, request } = getIiifVersion(url, opts.pathPrefix || defaultpathPrefix);\n\n    if (typeof streamResolver !== 'function') {\n      throw new IIIFError('streamResolver option must be specified');\n    }\n\n    if (opts.max?.height && !opts.max?.width) {\n      throw new IIIFError('maxHeight cannot be specified without maxWidth');\n    }\n\n    const defaults = {\n      dimensionFunction: this.defaultDimensionFunction.bind(this),\n      density: null\n    };\n\n    this\n      .setOpts({ ...defaults, iiifVersion, ...opts, prefix, request })\n      .initialize(streamResolver);\n  }\n\n  setOpts (opts: any) {\n    this.dimensionFunction = opts.dimensionFunction;\n    this.max = { ...opts.max };\n    this.includeMetadata = !!opts.includeMetadata;\n    this.density = opts.density;\n    this.baseUrl = opts.prefix;\n    this.debugBorder = !!opts.debugBorder;\n    this.pageThreshold = opts.pageThreshold;\n    this.sharpOptions = { ...opts.sharpOptions };\n    this.version = Number(opts.iiifVersion) as 2 | 3;\n    this.request = opts.request;\n    return this;\n  }\n\n  initialize (streamResolver: any) {\n    this.Implementation = (Versions as any)[this.version] as VersionModule;\n    if (!this.Implementation) {\n      throw new IIIFError(`No implementation found for IIIF Image API v${this.version}`);\n    }\n\n    const params = this.Implementation.Calculator.parsePath(this.request);\n    debug('Parsed URL: %j', params);\n    Object.assign(this, params);\n    this.streamResolver = streamResolver;\n\n    if ((this as any).quality && (this as any).format) {\n      this.filename = [this.quality, this.format].join('.');\n    } else if ((this as any).info) {\n      this.filename = 'info.json';\n    }\n    return this;\n  }\n\n  async withStream ({ id, baseUrl }: { id: string; baseUrl: string }, callback: (s: NodeJS.ReadableStream) => Promise<any>) {\n    debug('Requesting stream for %s', id);\n    if ((this.streamResolver as any).length === 2) {\n      return await (this.streamResolver as StreamResolverWithCallback)({ id, baseUrl }, callback);\n    } else {\n      const stream = await (this.streamResolver as StreamResolver)({ id, baseUrl });\n      return await callback(stream);\n    }\n  }\n\n  async defaultDimensionFunction ({ id, baseUrl }: { id: string; baseUrl: string }): Promise<Dimensions[]> {\n    const result: Dimensions[] = [];\n    let page = 0;\n    const target = sharp({ limitInputPixels: false, page });\n\n    return await this.withStream({ id, baseUrl }, async (stream) => {\n      stream.pipe(target);\n      const { width, height, pages } = await target.metadata();\n      if (!width || !height || !pages) return result;\n      result.push({ width, height });\n      for (page += 1; page < pages; page++) {\n        const scale = 1 / 2 ** page;\n        result.push({ width: Math.floor(width * scale), height: Math.floor(height * scale) });\n      }\n      return result;\n    });\n  }\n\n  async dimensions (): Promise<Dimensions[]> {\n    const fallback = this.dimensionFunction !== this.defaultDimensionFunction.bind(this);\n\n    if (!this.sizeInfo) {\n      debug('Attempting to use dimensionFunction to retrieve dimensions for %j', (this as any).id);\n      const params = { id: (this as any).id, baseUrl: this.baseUrl };\n      let dims: any = await this.dimensionFunction(params);\n      if (fallback && !dims) {\n        const warning = 'Unable to get dimensions for %s using custom function. Falling back to sharp.metadata().';\n        debug(warning, (this as any).id);\n        console.warn(warning, (this as any).id);\n        dims = await this.defaultDimensionFunction(params);\n      }\n      if (!Array.isArray(dims)) dims = [dims];\n      this.sizeInfo = dims as Dimensions[];\n    }\n    return this.sizeInfo;\n  }\n\n  async infoJson () {\n    const [dim] = await this.dimensions();\n    const sizes: Array<{ width: number; height: number }> = [];\n    for (let size = [dim.width, dim.height]; size.every((x) => x >= 64); size = size.map((x) => Math.floor(x / 2))) {\n      sizes.push({ width: size[0], height: size[1] });\n    }\n\n    const uri = new URL(this.baseUrl);\n    // Node's URL has readonly pathname in types; construct via join on new URL\n    uri.pathname = path.join(uri.pathname, this.id);\n    const id = uri.toString();\n    const doc = this.Implementation.infoDoc({ id, ...dim, sizes, max: this.max });\n    for (const prop in doc) {\n      if (doc[prop] === null || doc[prop] === undefined) delete doc[prop];\n    }\n\n    const body = JSON.stringify(doc, (_key, value) => (value?.constructor === Set ? [...value] : value));\n    return { contentType: 'application/json', body } as const;\n  }\n\n  operations (dim: Dimensions[]) {\n    const sharpOpt = this.sharpOptions;\n    const { max, pageThreshold } = this;\n    debug('pageThreshold: %d', pageThreshold);\n    return new Operations(this.version, dim, { sharp: sharpOpt, max, pageThreshold })\n      .region(this.region)\n      .size(this.size)\n      .rotation(this.rotation)\n      .quality(this.quality)\n      .format(this.format, this.density ?? undefined)\n      .withMetadata(this.includeMetadata);\n  }\n\n  async applyBorder (transformed: any) {\n    const buf = await transformed.toBuffer();\n    const borderPipe = sharp(buf, { limitInputPixels: false });\n    const { width, height } = await borderPipe.metadata();\n    const background = { r: 255, g: 0, b: 0, alpha: 1 } as any;\n\n    const topBorder = { create: { width, height: 1, channels: 4, background } } as any;\n    const bottomBorder = { create: { width, height: 1, channels: 4, background } } as any;\n    const leftBorder = { create: { width: 1, height, channels: 4, background } } as any;\n    const rightBorder = { create: { width: 1, height, channels: 4, background } } as any;\n\n    return borderPipe.composite([\n      { input: topBorder, left: 0, top: 0 },\n      { input: bottomBorder, left: 0, top: (height as number) - 1 },\n      { input: leftBorder, left: 0, top: 0 },\n      { input: rightBorder, left: (width as number) - 1, top: 0 }\n    ]);\n  }\n\n  async iiifImage () {\n    debugv('Request %s', this.request);\n    const dim = await this.dimensions();\n    const operations = this.operations(dim);\n    debugv('Operations: %j', operations);\n    const pipeline = await operations.pipeline();\n\n    const result = await this.withStream({ id: this.id, baseUrl: this.baseUrl }, async (stream) => {\n      debug('piping stream to pipeline');\n      let transformed = await stream.pipe(pipeline);\n      if (this.debugBorder) {\n        transformed = await this.applyBorder(transformed);\n      }\n      debug('converting to buffer');\n      return await transformed.toBuffer();\n    });\n    debug('returning %d bytes', (result as Buffer).length);\n    debug('baseUrl', this.baseUrl);\n\n    const canonicalUrl = new URL(path.join(this.id, operations.canonicalPath()), this.baseUrl);\n    return {\n      canonicalLink: canonicalUrl.toString(),\n      profileLink: this.Implementation.profileLink,\n      contentType: mime.lookup(this.format) as string,\n      body: result as Buffer\n    };\n  }\n\n  async execute () {\n    if (this.filename === 'info.json') {\n      return await this.infoJson();\n    } else {\n      return await this.iiifImage();\n    }\n  }\n}\n\nexport default Processor;\n","import Sharp, { Sharp as SharpType } from 'sharp';\nimport Debug from 'debug';\nimport { Versions } from './versions';\nimport type { VersionModule, CalculatorLike } from './contracts';\nimport type { Dimensions, BoundingBox, Format } from './types';\n\nconst debug = Debug('iiif-processor:transform');\n\nconst DEFAULT_PAGE_THRESHOLD = 1;\nconst SCALE_PRECISION = 10000000;\n\ntype PageDim = { width: number; height: number; page: number };\n\nexport class Operations {\n  private keepMetadata?: boolean;\n  private pages: PageDim[];\n  private sharpOptions?: Record<string, unknown>;\n  private calculator: CalculatorLike;\n  private pageThreshold: number;\n\n  constructor (version: number, dims: Dimensions[], opts: any) {\n    const { sharp, pageThreshold, ...rest } = opts || {};\n    const Implementation: VersionModule = (Versions as any)[version];\n    this.calculator = new Implementation.Calculator(dims[0], rest);\n    this.pageThreshold = typeof pageThreshold === 'number' ? pageThreshold : DEFAULT_PAGE_THRESHOLD;\n\n    this.pages = dims\n      .map((dim, page) => ({ ...dim, page }))\n      .sort((a, b) => b.width * b.height - a.width * a.height);\n    this.sharpOptions = sharp;\n  }\n\n  region (v: string) {\n    this.calculator.region(v);\n    return this;\n  }\n\n  size (v: string) {\n    this.calculator.size(v);\n    return this;\n  }\n\n  rotation (v: string) {\n    this.calculator.rotation(v);\n    return this;\n  }\n\n  quality (v: string) {\n    this.calculator.quality(v);\n    return this;\n  }\n\n  format (v: string, density?: number) {\n    this.calculator.format(v, density as any);\n    return this;\n  }\n\n  info () {\n    return this.calculator.info();\n  }\n\n  canonicalPath () {\n    return this.calculator.canonicalPath();\n  }\n\n  withMetadata (v: boolean) {\n    this.keepMetadata = v;\n    return this;\n  }\n\n  private computePage () {\n    const { fullSize } = this.info();\n    const { page } = this.pages.find((_candidate, index) => {\n      const next = this.pages[index + 1];\n      debug('comparing candidate %j to target %j with a %d-pixel buffer', next, fullSize, this.pageThreshold);\n      return !next || (next.width + this.pageThreshold < fullSize.width && next.height + this.pageThreshold < fullSize.height);\n    }) as PageDim;\n\n    const resolution = this.pages[page];\n    const scale = page === 0 ? 1 : Math.round((resolution.width / this.pages[0].width) * SCALE_PRECISION) / SCALE_PRECISION;\n    debug('Using page %d (%j) as source and scaling by %f', page, resolution, scale);\n    return { page, scale };\n  }\n\n  pipeline (): SharpType {\n    const pipeline = Sharp({ limitInputPixels: false, ...(this.sharpOptions || {}) });\n    const { page, scale } = this.computePage();\n    (pipeline as any).options.input.page = page;\n\n    const { format, quality, region, rotation: { flop, degree }, size } = this.info();\n    scaleRegion(region, scale, this.pages[page]);\n\n    pipeline.extract(region).resize(size);\n    if (flop) pipeline.flop();\n    pipeline.rotate(degree);\n    if (quality === 'gray') pipeline.grayscale();\n    if (quality === 'bitonal') pipeline.threshold();\n    setFormat(pipeline, format);\n    if (this.keepMetadata) pipeline.keepMetadata();\n\n    debug('Pipeline: %j', { page, region, size, rotation: { flop, degree }, quality, format });\n    return pipeline;\n  }\n}\n\nfunction setFormat (pipeline: SharpType, format: { type: Format; density?: number }) {\n  let pipelineFormat: string;\n  const pipelineOptions: any = {};\n\n  switch (format.type) {\n    case 'jpeg':\n      pipelineFormat = 'jpg';\n      break;\n    case 'tif':\n      pipelineFormat = 'tiff';\n      if (format.density) {\n        pipelineOptions.xres = format.density / 25.4;\n        pipelineOptions.yres = format.density / 25.4;\n      }\n      break;\n    default:\n      pipelineFormat = format.type;\n  }\n  (pipeline as any).toFormat(pipelineFormat, pipelineOptions);\n  if (format.density) {\n    (pipeline as any).withMetadata({ density: format.density });\n  }\n}\n\nfunction scaleRegion (region: BoundingBox, scale: number, page: { width: number; height: number }) {\n  region.left = Math.floor(region.left * scale);\n  region.top = Math.floor(region.top * scale);\n  region.width = Math.floor(region.width * scale);\n  region.height = Math.floor(region.height * scale);\n  region.left = Math.max(region.left, 0);\n  region.top = Math.max(region.top, 0);\n  region.width = Math.min(region.width, page.width);\n  region.height = Math.min(region.height, page.height);\n  return region;\n}\n\nexport default { Operations };\n","export * from './info';\nexport * from '../calculator/v2';\n","import Debug from 'debug';\nimport { IIIFError } from '../error';\nimport type { BoundingBox, Dimensions, MaxDimensions } from '../types';\nimport type { Calculated } from '../contracts';\n\nconst debug = Debug('iiif-processor:calculator');\n\nconst IR = '\\\\d+';\nconst FR = '\\\\d+(?:\\\\.\\\\d+)?';\nconst PCTR = /^pct:(?<val>[\\d.,]+)/;\n\nconst Validators = {\n  quality: ['color', 'gray', 'bitonal', 'default'],\n  format: ['jpg', 'jpeg', 'tif', 'tiff', 'png', 'webp'],\n  region: ['full', 'square', `pct:${FR},${FR},${FR},${FR}`, `${IR},${IR},${IR},${IR}`],\n  size: ['full', 'max', `pct:${FR}`, `${IR},`, `,${IR}`, `\\\\!?${IR},${IR}`],\n  rotation: [`\\\\!?${FR}`]\n};\n\ntype SizeDesc = { width?: number | null; height?: number | null; fit?: 'fill' | 'inside' };\ntype CanonicalInfo = { region: 'full' | BoundingBox; size: 'full' | 'max' | string; rotation: string; quality: string; format: string };\ntype ParsedInfo = { region: BoundingBox; size: SizeDesc; rotation: { flop: boolean; degree: number }; quality: string; format: { type: string; density?: number }; upscale: boolean };\n\nfunction validateDensity (v: any) {\n  debug('validating density %s', v);\n  if (v === null) return true;\n  if (v === undefined) return true;\n  if (typeof v !== 'number' || v < 0) {\n    throw new IIIFError(`Invalid density value: ${v}`);\n  }\n  return true;\n}\n\nexport class Base {\n  protected dims: Dimensions;\n  protected opts: { max?: MaxDimensions };\n  protected _canonicalInfo: CanonicalInfo;\n  protected _parsedInfo: ParsedInfo;\n  protected _sourceDims: Dimensions;\n\n  static _matchers () {\n    return Validators;\n  }\n\n  static _validator (type: keyof typeof Validators) {\n    const result = (this._matchers() as any)[type].join('|');\n    return `(?<${type}>${result})`;\n  }\n\n  static parsePath (path: string) {\n    const transformation = ['region', 'size', 'rotation'].map((type) => (this as any)._validator(type)).join('/') + '/' + (this as any)._validator('quality') + '.' + (this as any)._validator('format');\n    const re = new RegExp(`^/?(?<id>.+?)/(?:(?<info>info.json)|${transformation})$`);\n    const result = (re.exec(path) as any)?.groups;\n    if (!result) throw new IIIFError(`Not a valid IIIF path: ${path}`, { statusCode: 400 });\n    return result;\n  }\n\n  constructor (dims: Dimensions, opts: { max?: MaxDimensions } = {}) {\n    this.dims = { ...dims };\n    this.opts = { ...opts };\n    this._sourceDims = { ...dims };\n    this._canonicalInfo = {\n      region: 'full',\n      size: 'full',\n      rotation: '0',\n      quality: 'default',\n      format: 'jpg'\n    };\n    this._parsedInfo = {\n      region: { left: 0, top: 0, ...dims },\n      size: { width: dims.width, height: dims.height, fit: 'fill' },\n      rotation: { flop: false, degree: 0 },\n      quality: 'default',\n      format: { type: 'jpg' },\n      upscale: true\n    };\n  }\n\n  protected _validate (type: string, v: unknown) {\n    if (type === 'density') return validateDensity(v);\n    const re = new RegExp(`^${(this.constructor as any)._validator(type)}$`);\n    debug('validating %s %s against %s', type, v, re);\n    if (!re.test(String(v))) {\n      throw new IIIFError(`Invalid ${type}: ${v}`, { statusCode: 400 });\n    }\n    return true;\n  }\n\n  region (v: string) {\n    this._validate('region', v);\n    const pct = PCTR.exec(v);\n    let isFull = false;\n    if (v === 'full') {\n      this._parsedInfo.region = { left: 0, top: 0, ...this.dims };\n      isFull = true;\n    } else if (v === 'square') {\n      this._parsedInfo.region = regionSquare(this.dims);\n    } else if (pct) {\n      this._parsedInfo.region = regionPct(pct.groups?.val as string, this.dims);\n    } else {\n      this._parsedInfo.region = regionXYWH(v);\n    }\n    this._canonicalInfo.region = isFull ? 'full' : this._parsedInfo.region;\n    this._constrainRegion();\n    return this;\n  }\n\n  size (v: string) {\n    this._validate('size', v);\n    const pct = PCTR.exec(v);\n    let isMax = false;\n    if (['full', 'max'].includes(v)) {\n      this._setSize(this._parsedInfo.region);\n      isMax = true;\n    } else if (pct) {\n      this._setSize(sizePct(pct.groups?.val as string, this._parsedInfo.region));\n    } else {\n      this._setSize(sizeWH(v));\n    }\n    this._canonicalInfo.size = isMax ? v : this._canonicalSize();\n    return this;\n  }\n\n  rotation (v: string) {\n    this._validate('rotation', v);\n    this._canonicalInfo.rotation = v;\n    this._parsedInfo.rotation = { flop: v[0] === '!', degree: Number(v.replace(/^!/, '')) };\n    return this;\n  }\n\n  quality (v: string) {\n    this._validate('quality', v);\n    this._canonicalInfo.quality = v;\n    this._parsedInfo.quality = v;\n    return this;\n  }\n\n  format (v: string, density?: number) {\n    this._validate('format', v);\n    this._validate('density', density);\n    this._canonicalInfo.format = v;\n    this._parsedInfo.format = { type: v, density };\n    return this;\n  }\n\n  info (): Calculated {\n    return { ...this._parsedInfo, fullSize: fullSize(this._sourceDims, this._parsedInfo as any) } as Calculated;\n  }\n\n  canonicalPath () {\n    const { region, size, rotation, quality, format } = this._canonicalInfo;\n    return `${region}/${size}/${rotation}/${quality}.${format}`;\n  }\n\n  protected _setSize (v: BoundingBox | SizeDesc) {\n    const max: MaxDimensions = { ...(this.opts?.max || {}) };\n    max.height = max.height || max.width;\n    this._parsedInfo.size = (v as any).left !== undefined\n      ? { width: (v as BoundingBox).width, height: (v as BoundingBox).height, fit: 'fill' }\n      : { ...(v as SizeDesc) };\n    this._constrainSize(max);\n    if (!this._parsedInfo.upscale) {\n      this._constrainSize(this._sourceDims);\n    }\n    return this;\n  }\n\n  protected _constrainSize (constraints: any) {\n    const full = fullSize(this._sourceDims, this._parsedInfo);\n    const constraint = minNum(\n      constraints.width / full.width,\n      constraints.height / full.height,\n      constraints.area / (full.width * full.height)\n    );\n    if (constraint < 1) {\n      if (this._parsedInfo.size.width) {\n        this._parsedInfo.size.width = Math.floor(this._parsedInfo.size.width * constraint);\n      }\n      if (this._parsedInfo.size.height) {\n        this._parsedInfo.size.height = Math.floor(this._parsedInfo.size.height * constraint);\n      }\n    }\n  }\n\n  protected _canonicalSize () {\n    const { width, height } = this._parsedInfo.size;\n    const result = (width?.toString() || '') + ',' + (height?.toString() || '');\n    return this._parsedInfo.size.fit === 'inside' ? `!${result}` : result;\n  }\n\n  protected _constrainRegion () {\n    let { left, top, width, height } = this._parsedInfo.region;\n    left = Math.max(left, 0);\n    top = Math.max(top, 0);\n    if (left > this.dims.width || top > this.dims.height) {\n      throw new IIIFError('Region is out of bounds', { statusCode: 400 });\n    }\n    width = Math.min(width, this.dims.width - left);\n    height = Math.min(height, this.dims.height - top);\n    this._parsedInfo.region = { left, top, width, height };\n  }\n}\n\nfunction minNum (...args: unknown[]) {\n  const nums = args.filter((arg) => typeof arg === 'number' && !isNaN(arg));\n  return Math.min(...(nums as number[]));\n}\n\nfunction fullSize (dims: Dimensions, { region, size }: { region: BoundingBox; size: { width?: number | null; height?: number | null; fit?: 'fill' | 'inside' } }) {\n  const regionAspect = region.width / region.height;\n  if (!size.width && !size.height) {\n    throw new IIIFError('Must specify at least one of width or height', { statusCode: 400 });\n  }\n  if (!size.height && size.width != null) size.height = Math.floor((size.width as number) / regionAspect);\n  if (!size.width && size.height != null) size.width = Math.floor((size.height as number) * regionAspect);\n  const scaleFactor = (size.width as number) / region.width;\n  const result = { width: Math.floor(dims.width * scaleFactor), height: Math.floor(dims.height * scaleFactor) };\n  debug('Region %j at size %j yields full size %j, a scale factor of %f', region, size, result, scaleFactor);\n  return result;\n}\n\nfunction regionSquare (dims: Dimensions): BoundingBox {\n  let result: BoundingBox = { left: 0, top: 0, width: dims.width, height: dims.height };\n  if (dims.width !== dims.height) {\n    const side = Math.min(dims.width, dims.height);\n    result = { ...result, width: side, height: side };\n    const offset = Math.abs(Math.floor((dims.width - dims.height) / 2));\n    if (dims.width > dims.height) {\n      result.left = offset;\n      result.top = 0;\n    } else {\n      result.left = 0;\n      result.top = offset;\n    }\n  }\n  return result;\n}\n\nfunction regionPct (v: string, dims: Dimensions): BoundingBox {\n  let x: number, y: number, w: number, h: number;\n  [x, y, w, h] = v.split(/\\s*,\\s*/).map((pct) => Number(pct) / 100.0) as [number, number, number, number];\n  [x, w] = [x, w].map((val) => Math.floor(dims.width * val)) as [number, number];\n  [y, h] = [y, h].map((val) => Math.floor(dims.height * val)) as [number, number];\n  return regionXYWH([x, y, w, h]);\n}\n\nfunction regionXYWH (v: string | number[]): BoundingBox {\n  const parts: number[] = typeof v === 'string' ? v.split(/\\s*,\\s*/).map((val) => Number(val)) : v;\n  const result: BoundingBox = { left: parts[0], top: parts[1], width: parts[2], height: parts[3] };\n  if (result.width === 0 || result.height === 0) {\n    throw new IIIFError('Region width and height must both be > 0', { statusCode: 400 });\n  }\n  return result;\n}\n\nfunction sizePct (v: string, dims: Dimensions) {\n  const pct = Number(v);\n  if (isNaN(pct) || pct <= 0) {\n    throw new IIIFError(`Invalid resize %: ${v}`, { statusCode: 400 });\n  }\n  const width = Math.floor(dims.width * (pct / 100.0));\n  return sizeWH(`${width},`);\n}\n\nfunction sizeWH (v: string | (number | null)[]) {\n  const result: SizeDesc = { fit: 'fill' };\n  let parts: (number | null)[];\n  if (typeof v === 'string') {\n    if (v[0] === '!') {\n      result.fit = 'inside';\n      v = v.slice(1);\n    }\n    parts = v.split(/\\s*,\\s*/).map((val) => (val === '' ? null : Number(val)));\n  } else {\n    parts = v;\n  }\n  [result.width, result.height] = parts as [number | null, number | null];\n  if (result.width === 0 || result.height === 0) {\n    throw new IIIFError('Resize width and height must both be > 0', { statusCode: 400 });\n  }\n  return result;\n}\n\nexport const Qualities = Validators.quality;\nexport const Formats = Validators.format;\n\nexport default { Base, Qualities, Formats };\n","import { Base } from './base';\n\nexport class Calculator extends Base {}\n\nexport * from './base';\n\nexport default { Calculator };\n","import { Formats, Qualities } from '../calculator/v2';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Debug from 'debug';\nimport type { InfoDocInput, InfoDoc } from '../contracts';\nconst profileLink = 'http://iiif.io/api/image/2/level2.json';\n\nconst IIIFProfile = {\n  formats: new Set(Formats),\n  qualities: new Set(Qualities),\n  supports: new Set([\n    'baseUriRedirect',\n    'canonicalLinkHeader',\n    'cors',\n    'jsonldMediaType',\n    'mirroring',\n    'profileLinkHeader',\n    'regionByPct',\n    'regionByPx',\n    'regionSquare',\n    'rotationArbitrary',\n    'rotationBy90s',\n    'sizeAboveFull',\n    'sizeByConfinedWh',\n    'sizeByDistortedWh',\n    'sizeByForcedWh',\n    'sizeByH',\n    'sizeByPct',\n    'sizeByW',\n    'sizeByWh',\n    'sizeByWhListed'\n  ])\n};\n\nexport function infoDoc ({ id, width, height, sizes, max }: InfoDocInput): InfoDoc {\n  const maxAttrs = {\n    maxWidth: max?.width,\n    maxHeight: max?.height,\n    maxArea: max?.area\n  } as any;\n\n  return {\n    '@context': 'http://iiif.io/api/image/2/context.json',\n    '@id': id,\n    protocol: 'http://iiif.io/api/image',\n    width,\n    height,\n    sizes,\n    tiles: [\n      { width: 512, height: 512, scaleFactors: sizes.map((_v: any, i: number) => 2 ** i) }\n    ],\n    profile: [profileLink, { ...IIIFProfile, ...maxAttrs }]\n  };\n}\n\nexport { profileLink };\n","export * from './info';\nexport * from '../calculator/v3';\n","import { Base } from './base';\n\nexport class Calculator extends Base {\n  static _matchers () {\n    const result: any = { ...(super._matchers() as any) };\n    result.size = [...result.size].reduce((sizes: string[], pattern: string) => {\n      if (pattern !== 'full') sizes.push(`\\\\^?${pattern}`);\n      return sizes;\n    }, [] as string[]);\n    return result;\n  }\n\n  constructor (dims: { width: number; height: number }, opts: any = {}) {\n    super(dims, opts);\n    (this as any)._canonicalInfo.size = 'max';\n    (this as any)._parsedInfo.upscale = false;\n  }\n\n  size (v: string) {\n    if (v[0] === '^') {\n      (this as any)._parsedInfo.upscale = true;\n      v = v.slice(1, v.length);\n    }\n    return super.size(v);\n  }\n}\n\nexport * from './base';\n\nexport default { Calculator };\n","import { Formats, Qualities } from '../calculator/v3';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Debug from 'debug';\nimport type { InfoDocInput, InfoDoc } from '../contracts';\n\nexport const profileLink = 'https://iiif.io/api/image/3/level2.json';\n\nconst ComplianceProfile = {\n  level: 'level2',\n  uri: profileLink,\n  qualities: new Set(['default']),\n  formats: new Set(['jpg', 'png'])\n};\n\nconst IIIFExtras = {\n  extraFormats: new Set(Formats.filter((format) => !(ComplianceProfile.formats as Set<string>).has(format))),\n  extraQualities: new Set(Qualities.filter((quality) => !(ComplianceProfile.qualities as Set<string>).has(quality))),\n  extraFeatures: [\n    'canonicalLinkHeader',\n    'mirroring',\n    'profileLinkHeader',\n    'rotationArbitrary',\n    'sizeByDistortedWh',\n    'sizeByForcedWh',\n    'sizeByWhListed',\n    'sizeUpscaling'\n  ]\n};\n\nexport function infoDoc ({ id, width, height, sizes, max }: InfoDocInput): InfoDoc {\n  const maxAttrs = {\n    maxWidth: max?.width,\n    maxHeight: max?.height,\n    maxArea: max?.area\n  } as any;\n\n  return {\n    '@context': 'http://iiif.io/api/image/3/context.json',\n    id,\n    type: 'ImageService3',\n    protocol: 'http://iiif.io/api/image',\n    width,\n    height,\n    sizes,\n    extraFormats: [...(IIIFExtras.extraFormats as Set<string>)],\n    extraQualities: [...(IIIFExtras.extraQualities as Set<string>)],\n    extraFeatures: IIIFExtras.extraFeatures,\n    tiles: [\n      { width: 512, height: 512, scaleFactors: sizes.map((_v: any, i: number) => 2 ** i) }\n    ],\n    profile: ComplianceProfile,\n    ...maxAttrs\n  };\n}\n","import * as v2 from './v2';\nimport * as v3 from './v3';\nimport type { VersionModule } from './contracts';\n\nexport const Versions: Record<2 | 3, VersionModule> = {\n  2: v2 as unknown as VersionModule,\n  3: v3 as unknown as VersionModule\n};\n\nexport default Versions;\n"],"mappings":"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","names":["Debug","Debug","path","Calculator","infoDoc","profileLink","Calculator","profileLink","infoDoc","debug","Debug","sharp","fullSize","debug","Debug"]}